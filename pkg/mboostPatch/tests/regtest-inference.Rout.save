
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require("mboost")
Loading required package: mboost
Loading required package: parallel
Loading required package: stabs
This is mboost 2.4-3. See 'package?mboost' and 'news(package  = "mboost")'
for a complete list of changes.

> attach(asNamespace("mboost"))
The following objects are masked from package:mboost:

    %+%, %O%, %X%, AUC, AdaExp, Binomial, CoxPH, ExpectReg, FP, Family,
    GammaReg, GaussClass, GaussReg, Gaussian, Gehan, Huber, Hurdle,
    IPCweights, Laplace, Loglog, Lognormal, Multinomial, NBinomial,
    Poisson, PropOdds, QuantReg, Weibull, bbs, bl_lin, blackboost,
    bmono, bmrf, bns, bols, boost_control, brad, brandom, bspatial,
    bss, btree, buser, confint.glmboost, confint.mboost, cv, cvrisk,
    df2lambda, extract, gamboost, glmboost, hyper_bbs, mboost,
    mboost_fit, mstop, mstop<-, nuisance, risk, selected.mboost,
    stabsel.mboost, stabsel_parameters.mboost, survFit

> 
> set.seed(1907)
> 
> ### check confidence intervals
> data("bodyfat", package = "TH.data")
> bodyfat$ID <- factor(sample(1:5, size = nrow(bodyfat), replace = TRUE))
> glm <- glmboost(DEXfat ~ ., data = bodyfat)
> gam <- gamboost(DEXfat ~ ., data = bodyfat)
Warning message:
In bbs(as.data.frame(list(...)), df = dfbase) :
  cannot compute 'bbs' for non-numeric variables; used 'bols' instead.
> 
> refit <- glm$update(weights = model.weights(glm), risk = "inbag")
> stopifnot(all.equal(coef(refit), coef(glm)))
> 
> glm[200]

	 Generalized Linear Models Fitted via Gradient Boosting

Call:
glmboost.formula(formula = DEXfat ~ ., data = bodyfat)


	 Squared Error (Regression) 

Loss function: (y - f)^2 
 

Number of boosting iterations: mstop = 200 
Step size:  0.1 
Offset:  30.78282 

Coefficients: 
  (Intercept)           age     waistcirc       hipcirc  elbowbreadth 
-98.267586175   0.007743431   0.189304614   0.365744326  -0.118303213 
  kneebreadth      anthro3a      anthro3b      anthro3c           ID2 
  1.613621424   3.326860270   3.458883502   0.514108117  -0.833010169 
          ID3           ID4           ID5 
 -0.925934420  -1.979498322  -1.771987847 
attr(,"offset")
[1] 30.78282

> confint.glm <- confint(glm, B = 100, B.mstop = 2)
There were 50 or more warnings (use warnings() to see the first 50)
> confint.glm
	Bootstrap Confidence Intervals
                     2.5%        97.5%
(Intercept)  -78.05959532 -48.53585992
age           -0.01006118   0.04787764
waistcirc      0.08009208   0.29340444
hipcirc        0.20586965   0.52028270
elbowbreadth  -1.28224120   1.00828926
kneebreadth    0.03202871   3.13241905
anthro3a       0.00000000   7.16424617
anthro3b       0.00000000   6.34765206
anthro3c       0.00000000   4.03626864
anthro4        0.00000000   3.96809690
ID2           -1.91672133   1.16889159
ID3           -2.03416976   0.37211182
ID4           -3.33076662   0.00000000
ID5           -3.22332317   0.33953241
> 
> confint.gam <- confint(gam, B = 100, B.mstop = 1)
Start computing bootstrap confidence intervals... 
B = 1B = 2B = 3B = 4B = 5B = 6B = 7B = 8B = 9B = 10B = 11B = 12B = 13B = 14B = 15B = 16B = 17B = 18B = 19B = 20B = 21B = 22B = 23B = 24B = 25B = 26B = 27B = 28B = 29B = 30B = 31B = 32B = 33B = 34B = 35B = 36B = 37B = 38B = 39B = 40B = 41B = 42B = 43B = 44B = 45B = 46B = 47B = 48B = 49B = 50B = 51B = 52B = 53B = 54B = 55B = 56B = 57B = 58B = 59B = 60B = 61B = 62B = 63B = 64B = 65B = 66B = 67B = 68B = 69B = 70B = 71B = 72B = 73B = 74B = 75B = 76B = 77B = 78B = 79B = 80B = 81B = 82B = 83B = 84B = 85B = 86B = 87B = 88B = 89B = 90B = 91B = 92B = 93B = 94B = 95B = 96B = 97B = 98B = 99B = 100
There were 50 or more warnings (use warnings() to see the first 50)
> plot(confint.gam, which = 1)
> plot(confint.gam, which = 2)
> plot(confint.gam, which = 3)
> 
> proc.time()
   user  system elapsed 
 34.571   4.874  35.061 
